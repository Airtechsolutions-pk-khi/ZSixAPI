//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL.DBEntities
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class db_a82b87_zsixrestaurantEntities : DbContext
    {
        public db_a82b87_zsixrestaurantEntities()
            : base("name=db_a82b87_zsixrestaurantEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Addon> Addons { get; set; }
        public virtual DbSet<ApplicationInfo> ApplicationInfoes { get; set; }
        public virtual DbSet<AppSetting> AppSettings { get; set; }
        public virtual DbSet<Banner> Banners { get; set; }
        public virtual DbSet<Brand> Brands { get; set; }
        public virtual DbSet<Category> Categories { get; set; }
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<CustomerAddress> CustomerAddresses { get; set; }
        public virtual DbSet<CustomerDetail> CustomerDetails { get; set; }
        public virtual DbSet<CustomerOrderDetail> CustomerOrderDetails { get; set; }
        public virtual DbSet<CustomerPayment> CustomerPayments { get; set; }
        public virtual DbSet<Delivery> Deliveries { get; set; }
        public virtual DbSet<DeliveryAreaBrandJunc> DeliveryAreaBrandJuncs { get; set; }
        public virtual DbSet<Item> Items { get; set; }
        public virtual DbSet<Modifier> Modifiers { get; set; }
        public virtual DbSet<Offer> Offers { get; set; }
        public virtual DbSet<OrderDetail> OrderDetails { get; set; }
        public virtual DbSet<OrderDetailAddon> OrderDetailAddons { get; set; }
        public virtual DbSet<OrderDetailModifier> OrderDetailModifiers { get; set; }
        public virtual DbSet<Status> Status { get; set; }
        public virtual DbSet<SubUser> SubUsers { get; set; }
        public virtual DbSet<TodaySpecialItem> TodaySpecialItems { get; set; }
        public virtual DbSet<TransferOrder> TransferOrders { get; set; }
        public virtual DbSet<Unit> Units { get; set; }
        public virtual DbSet<Location> Locations { get; set; }
        public virtual DbSet<DeliveryBoy> DeliveryBoys { get; set; }
        public virtual DbSet<DeliveryBoyBrandJunc> DeliveryBoyBrandJuncs { get; set; }
        public virtual DbSet<PushToken> PushTokens { get; set; }
        public virtual DbSet<Reservation> Reservations { get; set; }
        public virtual DbSet<OrderCheckout> OrderCheckouts { get; set; }
        public virtual DbSet<CustomerOrder> CustomerOrders { get; set; }
        public virtual DbSet<Order> Orders { get; set; }
    
        public virtual ObjectResult<sp_authenticateUser_admin_Result> sp_authenticateUser_admin(string email, string password)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_authenticateUser_admin_Result>("sp_authenticateUser_admin", emailParameter, passwordParameter);
        }
    
        public virtual int sp_DeleteAddon(Nullable<int> id, Nullable<System.DateTime> lastUpdatedDate)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var lastUpdatedDateParameter = lastUpdatedDate.HasValue ?
                new ObjectParameter("LastUpdatedDate", lastUpdatedDate) :
                new ObjectParameter("LastUpdatedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DeleteAddon", idParameter, lastUpdatedDateParameter);
        }
    
        public virtual int sp_DeleteBanner(Nullable<int> id, Nullable<System.DateTime> lastUpdatedDate)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var lastUpdatedDateParameter = lastUpdatedDate.HasValue ?
                new ObjectParameter("LastUpdatedDate", lastUpdatedDate) :
                new ObjectParameter("LastUpdatedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DeleteBanner", idParameter, lastUpdatedDateParameter);
        }
    
        public virtual int sp_DeleteCategory(Nullable<int> id, Nullable<System.DateTime> lastUpdatedDate)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var lastUpdatedDateParameter = lastUpdatedDate.HasValue ?
                new ObjectParameter("LastUpdatedDate", lastUpdatedDate) :
                new ObjectParameter("LastUpdatedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DeleteCategory", idParameter, lastUpdatedDateParameter);
        }
    
        public virtual int sp_DeleteCustomer(Nullable<int> id, Nullable<System.DateTime> lastUpdatedDate)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var lastUpdatedDateParameter = lastUpdatedDate.HasValue ?
                new ObjectParameter("LastUpdatedDate", lastUpdatedDate) :
                new ObjectParameter("LastUpdatedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DeleteCustomer", idParameter, lastUpdatedDateParameter);
        }
    
        public virtual int sp_DeleteDelivery(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DeleteDelivery", idParameter);
        }
    
        public virtual int sp_DeleteItem(Nullable<int> id, Nullable<System.DateTime> lastUpdatedDate)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var lastUpdatedDateParameter = lastUpdatedDate.HasValue ?
                new ObjectParameter("LastUpdatedDate", lastUpdatedDate) :
                new ObjectParameter("LastUpdatedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DeleteItem", idParameter, lastUpdatedDateParameter);
        }
    
        public virtual int sp_DeleteItemModifiers_Admin(Nullable<int> itemID)
        {
            var itemIDParameter = itemID.HasValue ?
                new ObjectParameter("ItemID", itemID) :
                new ObjectParameter("ItemID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DeleteItemModifiers_Admin", itemIDParameter);
        }
    
        public virtual int sp_DeleteLocation(Nullable<int> id, Nullable<System.DateTime> lastUpdatedDate)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var lastUpdatedDateParameter = lastUpdatedDate.HasValue ?
                new ObjectParameter("LastUpdatedDate", lastUpdatedDate) :
                new ObjectParameter("LastUpdatedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DeleteLocation", idParameter, lastUpdatedDateParameter);
        }
    
        public virtual int sp_DeleteModifier(Nullable<int> id, Nullable<System.DateTime> lastUpdatedDate)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var lastUpdatedDateParameter = lastUpdatedDate.HasValue ?
                new ObjectParameter("LastUpdatedDate", lastUpdatedDate) :
                new ObjectParameter("LastUpdatedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DeleteModifier", idParameter, lastUpdatedDateParameter);
        }
    
        public virtual int sp_Deleteoffers(Nullable<int> id, Nullable<System.DateTime> lastUpdatedDate)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var lastUpdatedDateParameter = lastUpdatedDate.HasValue ?
                new ObjectParameter("LastUpdatedDate", lastUpdatedDate) :
                new ObjectParameter("LastUpdatedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Deleteoffers", idParameter, lastUpdatedDateParameter);
        }
    
        public virtual int sp_DeleteTodaySpecial_Admin(Nullable<int> brandID, string items)
        {
            var brandIDParameter = brandID.HasValue ?
                new ObjectParameter("BrandID", brandID) :
                new ObjectParameter("BrandID", typeof(int));
    
            var itemsParameter = items != null ?
                new ObjectParameter("Items", items) :
                new ObjectParameter("Items", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DeleteTodaySpecial_Admin", brandIDParameter, itemsParameter);
        }
    
        public virtual ObjectResult<sp_getAddons_Result> sp_getAddons(Nullable<int> brandid)
        {
            var brandidParameter = brandid.HasValue ?
                new ObjectParameter("brandid", brandid) :
                new ObjectParameter("brandid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getAddons_Result>("sp_getAddons", brandidParameter);
        }
    
        public virtual ObjectResult<sp_GetAddonsbyID_Admin_Result> sp_GetAddonsbyID_Admin(Nullable<int> id, Nullable<int> brandid)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var brandidParameter = brandid.HasValue ?
                new ObjectParameter("brandid", brandid) :
                new ObjectParameter("brandid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetAddonsbyID_Admin_Result>("sp_GetAddonsbyID_Admin", idParameter, brandidParameter);
        }
    
        public virtual ObjectResult<sp_GetAdminOrders_api_Result> sp_GetAdminOrders_api(Nullable<int> locationID)
        {
            var locationIDParameter = locationID.HasValue ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetAdminOrders_api_Result>("sp_GetAdminOrders_api", locationIDParameter);
        }
    
        public virtual ObjectResult<sp_GetAdminOrdersv2_api_Result> sp_GetAdminOrdersv2_api(Nullable<int> locationID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string search)
        {
            var locationIDParameter = locationID.HasValue ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetAdminOrdersv2_api_Result>("sp_GetAdminOrdersv2_api", locationIDParameter, startDateParameter, endDateParameter, searchParameter);
        }
    
        public virtual ObjectResult<sp_getAllBrand_Result> sp_getAllBrand()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getAllBrand_Result>("sp_getAllBrand");
        }
    
        public virtual ObjectResult<sp_getAppsetting_api_Result> sp_getAppsetting_api()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getAppsetting_api_Result>("sp_getAppsetting_api");
        }
    
        public virtual ObjectResult<sp_GetAppsettingbyID_Admin_Result> sp_GetAppsettingbyID_Admin(Nullable<int> brandID)
        {
            var brandIDParameter = brandID.HasValue ?
                new ObjectParameter("BrandID", brandID) :
                new ObjectParameter("BrandID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetAppsettingbyID_Admin_Result>("sp_GetAppsettingbyID_Admin", brandIDParameter);
        }
    
        public virtual ObjectResult<sp_getBanner_Result> sp_getBanner(Nullable<int> brandid)
        {
            var brandidParameter = brandid.HasValue ?
                new ObjectParameter("brandid", brandid) :
                new ObjectParameter("brandid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getBanner_Result>("sp_getBanner", brandidParameter);
        }
    
        public virtual ObjectResult<sp_GetBannerbyID_Admin_Result> sp_GetBannerbyID_Admin(Nullable<int> id, Nullable<int> brandid)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var brandidParameter = brandid.HasValue ?
                new ObjectParameter("brandid", brandid) :
                new ObjectParameter("brandid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetBannerbyID_Admin_Result>("sp_GetBannerbyID_Admin", idParameter, brandidParameter);
        }
    
        public virtual ObjectResult<sp_getBrand_Result> sp_getBrand()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getBrand_Result>("sp_getBrand");
        }
    
        public virtual ObjectResult<sp_GetBrandID_Admin_Result> sp_GetBrandID_Admin(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetBrandID_Admin_Result>("sp_GetBrandID_Admin", idParameter);
        }
    
        public virtual ObjectResult<sp_getBrands_api_Result> sp_getBrands_api()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getBrands_api_Result>("sp_getBrands_api");
        }
    
        public virtual ObjectResult<string> sp_GetBrandSettings_Admin(Nullable<int> brandid)
        {
            var brandidParameter = brandid.HasValue ?
                new ObjectParameter("brandid", brandid) :
                new ObjectParameter("brandid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_GetBrandSettings_Admin", brandidParameter);
        }
    
        public virtual ObjectResult<sp_getCategory_Result> sp_getCategory(Nullable<int> brandid)
        {
            var brandidParameter = brandid.HasValue ?
                new ObjectParameter("brandid", brandid) :
                new ObjectParameter("brandid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getCategory_Result>("sp_getCategory", brandidParameter);
        }
    
        public virtual ObjectResult<sp_GetCategorybyID_Admin_Result> sp_GetCategorybyID_Admin(Nullable<int> id, Nullable<int> brandid)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var brandidParameter = brandid.HasValue ?
                new ObjectParameter("brandid", brandid) :
                new ObjectParameter("brandid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetCategorybyID_Admin_Result>("sp_GetCategorybyID_Admin", idParameter, brandidParameter);
        }
    
        public virtual ObjectResult<sp_getCustomer_Result> sp_getCustomer(Nullable<int> brandid)
        {
            var brandidParameter = brandid.HasValue ?
                new ObjectParameter("brandid", brandid) :
                new ObjectParameter("brandid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getCustomer_Result>("sp_getCustomer", brandidParameter);
        }
    
        public virtual ObjectResult<sp_GetCustomerbyID_Admin_Result> sp_GetCustomerbyID_Admin(Nullable<int> id, Nullable<int> brandid)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var brandidParameter = brandid.HasValue ?
                new ObjectParameter("brandid", brandid) :
                new ObjectParameter("brandid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetCustomerbyID_Admin_Result>("sp_GetCustomerbyID_Admin", idParameter, brandidParameter);
        }
    
        public virtual ObjectResult<sp_GetCustomerOrderDetails_api_Result> sp_GetCustomerOrderDetails_api(Nullable<int> customerID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetCustomerOrderDetails_api_Result>("sp_GetCustomerOrderDetails_api", customerIDParameter);
        }
    
        public virtual ObjectResult<sp_GetCustomerOrders_api_Result> sp_GetCustomerOrders_api(Nullable<int> customerID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetCustomerOrders_api_Result>("sp_GetCustomerOrders_api", customerIDParameter);
        }
    
        public virtual ObjectResult<sp_getDelivery_Result> sp_getDelivery(Nullable<int> brandid)
        {
            var brandidParameter = brandid.HasValue ?
                new ObjectParameter("brandid", brandid) :
                new ObjectParameter("brandid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getDelivery_Result>("sp_getDelivery", brandidParameter);
        }
    
        public virtual ObjectResult<sp_GetDeliverybyID_Admin_Result> sp_GetDeliverybyID_Admin(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetDeliverybyID_Admin_Result>("sp_GetDeliverybyID_Admin", idParameter);
        }
    
        public virtual ObjectResult<sp_GetItembyID_Admin_Result> sp_GetItembyID_Admin(Nullable<int> id, Nullable<int> brandid)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var brandidParameter = brandid.HasValue ?
                new ObjectParameter("brandid", brandid) :
                new ObjectParameter("brandid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetItembyID_Admin_Result>("sp_GetItembyID_Admin", idParameter, brandidParameter);
        }
    
        public virtual ObjectResult<sp_getItems_Result> sp_getItems(Nullable<int> brandid)
        {
            var brandidParameter = brandid.HasValue ?
                new ObjectParameter("brandid", brandid) :
                new ObjectParameter("brandid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getItems_Result>("sp_getItems", brandidParameter);
        }
    
        public virtual ObjectResult<string> sp_GetItemSettings_Admin(Nullable<int> brandid)
        {
            var brandidParameter = brandid.HasValue ?
                new ObjectParameter("brandid", brandid) :
                new ObjectParameter("brandid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_GetItemSettings_Admin", brandidParameter);
        }
    
        public virtual ObjectResult<sp_GetItemSettingsTitle_Admin_Result> sp_GetItemSettingsTitle_Admin(Nullable<int> appInfoID)
        {
            var appInfoIDParameter = appInfoID.HasValue ?
                new ObjectParameter("AppInfoID", appInfoID) :
                new ObjectParameter("AppInfoID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetItemSettingsTitle_Admin_Result>("sp_GetItemSettingsTitle_Admin", appInfoIDParameter);
        }
    
        public virtual ObjectResult<sp_getLocation_Result> sp_getLocation(Nullable<int> brandid)
        {
            var brandidParameter = brandid.HasValue ?
                new ObjectParameter("brandid", brandid) :
                new ObjectParameter("brandid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getLocation_Result>("sp_getLocation", brandidParameter);
        }
    
        public virtual ObjectResult<sp_GetLocationID_Admin_Result> sp_GetLocationID_Admin(Nullable<int> id, Nullable<int> brandid)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var brandidParameter = brandid.HasValue ?
                new ObjectParameter("brandid", brandid) :
                new ObjectParameter("brandid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetLocationID_Admin_Result>("sp_GetLocationID_Admin", idParameter, brandidParameter);
        }
    
        public virtual ObjectResult<sp_getLocations_api_Result> sp_getLocations_api()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getLocations_api_Result>("sp_getLocations_api");
        }
    
        public virtual ObjectResult<sp_GetMenu_api_Result> sp_GetMenu_api(Nullable<int> brandID)
        {
            var brandIDParameter = brandID.HasValue ?
                new ObjectParameter("BrandID", brandID) :
                new ObjectParameter("BrandID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetMenu_api_Result>("sp_GetMenu_api", brandIDParameter);
        }
    
        public virtual ObjectResult<sp_getModifiers_Result> sp_getModifiers(Nullable<int> brandid)
        {
            var brandidParameter = brandid.HasValue ?
                new ObjectParameter("brandid", brandid) :
                new ObjectParameter("brandid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getModifiers_Result>("sp_getModifiers", brandidParameter);
        }
    
        public virtual ObjectResult<sp_GetModifiersbyID_Admin_Result> sp_GetModifiersbyID_Admin(Nullable<int> id, Nullable<int> brandid)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var brandidParameter = brandid.HasValue ?
                new ObjectParameter("brandid", brandid) :
                new ObjectParameter("brandid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetModifiersbyID_Admin_Result>("sp_GetModifiersbyID_Admin", idParameter, brandidParameter);
        }
    
        public virtual ObjectResult<sp_getOffers_Result> sp_getOffers(Nullable<int> brandid)
        {
            var brandidParameter = brandid.HasValue ?
                new ObjectParameter("brandid", brandid) :
                new ObjectParameter("brandid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getOffers_Result>("sp_getOffers", brandidParameter);
        }
    
        public virtual ObjectResult<sp_GetOffersbyID_Admin_Result> sp_GetOffersbyID_Admin(Nullable<int> id, Nullable<int> brandid)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var brandidParameter = brandid.HasValue ?
                new ObjectParameter("brandid", brandid) :
                new ObjectParameter("brandid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetOffersbyID_Admin_Result>("sp_GetOffersbyID_Admin", idParameter, brandidParameter);
        }
    
        public virtual ObjectResult<sp_GetOrdersbyID_Admin_Result> sp_GetOrdersbyID_Admin(Nullable<int> orderID)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetOrdersbyID_Admin_Result>("sp_GetOrdersbyID_Admin", orderIDParameter);
        }
    
        public virtual int sp_insertAddon_Admin(string name, string arabicName, string description, string image, Nullable<double> price, string lastUpdatedBy, Nullable<System.DateTime> lastUpdatedDate, Nullable<int> statusID, Nullable<int> brandID, Nullable<int> addonID)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var arabicNameParameter = arabicName != null ?
                new ObjectParameter("ArabicName", arabicName) :
                new ObjectParameter("ArabicName", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(double));
    
            var lastUpdatedByParameter = lastUpdatedBy != null ?
                new ObjectParameter("LastUpdatedBy", lastUpdatedBy) :
                new ObjectParameter("LastUpdatedBy", typeof(string));
    
            var lastUpdatedDateParameter = lastUpdatedDate.HasValue ?
                new ObjectParameter("LastUpdatedDate", lastUpdatedDate) :
                new ObjectParameter("LastUpdatedDate", typeof(System.DateTime));
    
            var statusIDParameter = statusID.HasValue ?
                new ObjectParameter("StatusID", statusID) :
                new ObjectParameter("StatusID", typeof(int));
    
            var brandIDParameter = brandID.HasValue ?
                new ObjectParameter("BrandID", brandID) :
                new ObjectParameter("BrandID", typeof(int));
    
            var addonIDParameter = addonID.HasValue ?
                new ObjectParameter("AddonID", addonID) :
                new ObjectParameter("AddonID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insertAddon_Admin", nameParameter, arabicNameParameter, descriptionParameter, imageParameter, priceParameter, lastUpdatedByParameter, lastUpdatedDateParameter, statusIDParameter, brandIDParameter, addonIDParameter);
        }
    
        public virtual int sp_insertAppInfo_Admin(string appDescription, string facebook, string twitter, string instagram)
        {
            var appDescriptionParameter = appDescription != null ?
                new ObjectParameter("AppDescription", appDescription) :
                new ObjectParameter("AppDescription", typeof(string));
    
            var facebookParameter = facebook != null ?
                new ObjectParameter("Facebook", facebook) :
                new ObjectParameter("Facebook", typeof(string));
    
            var twitterParameter = twitter != null ?
                new ObjectParameter("Twitter", twitter) :
                new ObjectParameter("Twitter", typeof(string));
    
            var instagramParameter = instagram != null ?
                new ObjectParameter("Instagram", instagram) :
                new ObjectParameter("Instagram", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insertAppInfo_Admin", appDescriptionParameter, facebookParameter, twitterParameter, instagramParameter);
        }
    
        public virtual int sp_insertAppsetting_Admin(string branchName, string branchAddress, string branchTiming, string deliveryNo, Nullable<int> discount, string discountdescription, Nullable<int> statusID, Nullable<int> brandID, Nullable<int> whatsappNo)
        {
            var branchNameParameter = branchName != null ?
                new ObjectParameter("BranchName", branchName) :
                new ObjectParameter("BranchName", typeof(string));
    
            var branchAddressParameter = branchAddress != null ?
                new ObjectParameter("BranchAddress", branchAddress) :
                new ObjectParameter("BranchAddress", typeof(string));
    
            var branchTimingParameter = branchTiming != null ?
                new ObjectParameter("BranchTiming", branchTiming) :
                new ObjectParameter("BranchTiming", typeof(string));
    
            var deliveryNoParameter = deliveryNo != null ?
                new ObjectParameter("DeliveryNo", deliveryNo) :
                new ObjectParameter("DeliveryNo", typeof(string));
    
            var discountParameter = discount.HasValue ?
                new ObjectParameter("Discount", discount) :
                new ObjectParameter("Discount", typeof(int));
    
            var discountdescriptionParameter = discountdescription != null ?
                new ObjectParameter("Discountdescription", discountdescription) :
                new ObjectParameter("Discountdescription", typeof(string));
    
            var statusIDParameter = statusID.HasValue ?
                new ObjectParameter("StatusID", statusID) :
                new ObjectParameter("StatusID", typeof(int));
    
            var brandIDParameter = brandID.HasValue ?
                new ObjectParameter("BrandID", brandID) :
                new ObjectParameter("BrandID", typeof(int));
    
            var whatsappNoParameter = whatsappNo.HasValue ?
                new ObjectParameter("WhatsappNo", whatsappNo) :
                new ObjectParameter("WhatsappNo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insertAppsetting_Admin", branchNameParameter, branchAddressParameter, branchTimingParameter, deliveryNoParameter, discountParameter, discountdescriptionParameter, statusIDParameter, brandIDParameter, whatsappNoParameter);
        }
    
        public virtual int sp_insertBanner_Admin(string name, string description, string image, Nullable<int> statusID, string lastUpdatedBy, Nullable<System.DateTime> lastUpdatedDate, Nullable<int> brandID, Nullable<int> bannerID)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var statusIDParameter = statusID.HasValue ?
                new ObjectParameter("StatusID", statusID) :
                new ObjectParameter("StatusID", typeof(int));
    
            var lastUpdatedByParameter = lastUpdatedBy != null ?
                new ObjectParameter("LastUpdatedBy", lastUpdatedBy) :
                new ObjectParameter("LastUpdatedBy", typeof(string));
    
            var lastUpdatedDateParameter = lastUpdatedDate.HasValue ?
                new ObjectParameter("LastUpdatedDate", lastUpdatedDate) :
                new ObjectParameter("LastUpdatedDate", typeof(System.DateTime));
    
            var brandIDParameter = brandID.HasValue ?
                new ObjectParameter("BrandID", brandID) :
                new ObjectParameter("BrandID", typeof(int));
    
            var bannerIDParameter = bannerID.HasValue ?
                new ObjectParameter("BannerID", bannerID) :
                new ObjectParameter("BannerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insertBanner_Admin", nameParameter, descriptionParameter, imageParameter, statusIDParameter, lastUpdatedByParameter, lastUpdatedDateParameter, brandIDParameter, bannerIDParameter);
        }
    
        public virtual int sp_insertBrand_Admin(string username, string name, string image, string email, string password, string companyURl, string address, Nullable<int> statusID, string currency, Nullable<long> businessKey, string lastUpdateBy, Nullable<System.DateTime> lastUpdatedDate, Nullable<int> brandID)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var companyURlParameter = companyURl != null ?
                new ObjectParameter("CompanyURl", companyURl) :
                new ObjectParameter("CompanyURl", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var statusIDParameter = statusID.HasValue ?
                new ObjectParameter("StatusID", statusID) :
                new ObjectParameter("StatusID", typeof(int));
    
            var currencyParameter = currency != null ?
                new ObjectParameter("Currency", currency) :
                new ObjectParameter("Currency", typeof(string));
    
            var businessKeyParameter = businessKey.HasValue ?
                new ObjectParameter("BusinessKey", businessKey) :
                new ObjectParameter("BusinessKey", typeof(long));
    
            var lastUpdateByParameter = lastUpdateBy != null ?
                new ObjectParameter("LastUpdateBy", lastUpdateBy) :
                new ObjectParameter("LastUpdateBy", typeof(string));
    
            var lastUpdatedDateParameter = lastUpdatedDate.HasValue ?
                new ObjectParameter("LastUpdatedDate", lastUpdatedDate) :
                new ObjectParameter("LastUpdatedDate", typeof(System.DateTime));
    
            var brandIDParameter = brandID.HasValue ?
                new ObjectParameter("BrandID", brandID) :
                new ObjectParameter("BrandID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insertBrand_Admin", usernameParameter, nameParameter, imageParameter, emailParameter, passwordParameter, companyURlParameter, addressParameter, statusIDParameter, currencyParameter, businessKeyParameter, lastUpdateByParameter, lastUpdatedDateParameter, brandIDParameter);
        }
    
        public virtual int sp_insertBrandDelivery_Admin(string brandIDs, Nullable<int> deliveryAreaID)
        {
            var brandIDsParameter = brandIDs != null ?
                new ObjectParameter("BrandIDs", brandIDs) :
                new ObjectParameter("BrandIDs", typeof(string));
    
            var deliveryAreaIDParameter = deliveryAreaID.HasValue ?
                new ObjectParameter("DeliveryAreaID", deliveryAreaID) :
                new ObjectParameter("DeliveryAreaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insertBrandDelivery_Admin", brandIDsParameter, deliveryAreaIDParameter);
        }
    
        public virtual int sp_insertCategory_Admin(string name, string arabicName, string description, string image, Nullable<int> displayOrder, string lastUpdatedBy, Nullable<System.DateTime> lastUpdatedDate, Nullable<int> statusID, Nullable<int> locationID, Nullable<int> brandID)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var arabicNameParameter = arabicName != null ?
                new ObjectParameter("ArabicName", arabicName) :
                new ObjectParameter("ArabicName", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var displayOrderParameter = displayOrder.HasValue ?
                new ObjectParameter("DisplayOrder", displayOrder) :
                new ObjectParameter("DisplayOrder", typeof(int));
    
            var lastUpdatedByParameter = lastUpdatedBy != null ?
                new ObjectParameter("LastUpdatedBy", lastUpdatedBy) :
                new ObjectParameter("LastUpdatedBy", typeof(string));
    
            var lastUpdatedDateParameter = lastUpdatedDate.HasValue ?
                new ObjectParameter("LastUpdatedDate", lastUpdatedDate) :
                new ObjectParameter("LastUpdatedDate", typeof(System.DateTime));
    
            var statusIDParameter = statusID.HasValue ?
                new ObjectParameter("StatusID", statusID) :
                new ObjectParameter("StatusID", typeof(int));
    
            var locationIDParameter = locationID.HasValue ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(int));
    
            var brandIDParameter = brandID.HasValue ?
                new ObjectParameter("BrandID", brandID) :
                new ObjectParameter("BrandID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insertCategory_Admin", nameParameter, arabicNameParameter, descriptionParameter, imageParameter, displayOrderParameter, lastUpdatedByParameter, lastUpdatedDateParameter, statusIDParameter, locationIDParameter, brandIDParameter);
        }
    
        public virtual int sp_insertCustomer_Admin(string fullName, string email, string mobile, string image, Nullable<int> statusID, string lastUpdatedBy, Nullable<System.DateTime> lastUpdatedDate, Nullable<int> locationID, Nullable<int> brandID, string password, Nullable<int> customerID)
        {
            var fullNameParameter = fullName != null ?
                new ObjectParameter("FullName", fullName) :
                new ObjectParameter("FullName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var statusIDParameter = statusID.HasValue ?
                new ObjectParameter("StatusID", statusID) :
                new ObjectParameter("StatusID", typeof(int));
    
            var lastUpdatedByParameter = lastUpdatedBy != null ?
                new ObjectParameter("LastUpdatedBy", lastUpdatedBy) :
                new ObjectParameter("LastUpdatedBy", typeof(string));
    
            var lastUpdatedDateParameter = lastUpdatedDate.HasValue ?
                new ObjectParameter("LastUpdatedDate", lastUpdatedDate) :
                new ObjectParameter("LastUpdatedDate", typeof(System.DateTime));
    
            var locationIDParameter = locationID.HasValue ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(int));
    
            var brandIDParameter = brandID.HasValue ?
                new ObjectParameter("BrandID", brandID) :
                new ObjectParameter("BrandID", typeof(int));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insertCustomer_Admin", fullNameParameter, emailParameter, mobileParameter, imageParameter, statusIDParameter, lastUpdatedByParameter, lastUpdatedDateParameter, locationIDParameter, brandIDParameter, passwordParameter, customerIDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> sp_insertDelivery_Admin(string name, Nullable<double> amount, Nullable<int> statusID, Nullable<int> deliveryAreaID)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(double));
    
            var statusIDParameter = statusID.HasValue ?
                new ObjectParameter("StatusID", statusID) :
                new ObjectParameter("StatusID", typeof(int));
    
            var deliveryAreaIDParameter = deliveryAreaID.HasValue ?
                new ObjectParameter("DeliveryAreaID", deliveryAreaID) :
                new ObjectParameter("DeliveryAreaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("sp_insertDelivery_Admin", nameParameter, amountParameter, statusIDParameter, deliveryAreaIDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> sp_insertItem_Admin(Nullable<int> categoryID, Nullable<int> unitID, string name, string arabicName, string description, string image, string barcode, string sKU, Nullable<int> displayOrder, Nullable<double> price, Nullable<double> cost, string itemType, string lastUpdatedBy, Nullable<System.DateTime> lastUpdatedDate, Nullable<int> statusID, Nullable<bool> isFeatured, Nullable<double> calories, Nullable<int> itemID, Nullable<bool> isApplyDiscount)
        {
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(int));
    
            var unitIDParameter = unitID.HasValue ?
                new ObjectParameter("UnitID", unitID) :
                new ObjectParameter("UnitID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var arabicNameParameter = arabicName != null ?
                new ObjectParameter("ArabicName", arabicName) :
                new ObjectParameter("ArabicName", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var barcodeParameter = barcode != null ?
                new ObjectParameter("Barcode", barcode) :
                new ObjectParameter("Barcode", typeof(string));
    
            var sKUParameter = sKU != null ?
                new ObjectParameter("SKU", sKU) :
                new ObjectParameter("SKU", typeof(string));
    
            var displayOrderParameter = displayOrder.HasValue ?
                new ObjectParameter("DisplayOrder", displayOrder) :
                new ObjectParameter("DisplayOrder", typeof(int));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(double));
    
            var costParameter = cost.HasValue ?
                new ObjectParameter("Cost", cost) :
                new ObjectParameter("Cost", typeof(double));
    
            var itemTypeParameter = itemType != null ?
                new ObjectParameter("ItemType", itemType) :
                new ObjectParameter("ItemType", typeof(string));
    
            var lastUpdatedByParameter = lastUpdatedBy != null ?
                new ObjectParameter("LastUpdatedBy", lastUpdatedBy) :
                new ObjectParameter("LastUpdatedBy", typeof(string));
    
            var lastUpdatedDateParameter = lastUpdatedDate.HasValue ?
                new ObjectParameter("LastUpdatedDate", lastUpdatedDate) :
                new ObjectParameter("LastUpdatedDate", typeof(System.DateTime));
    
            var statusIDParameter = statusID.HasValue ?
                new ObjectParameter("StatusID", statusID) :
                new ObjectParameter("StatusID", typeof(int));
    
            var isFeaturedParameter = isFeatured.HasValue ?
                new ObjectParameter("IsFeatured", isFeatured) :
                new ObjectParameter("IsFeatured", typeof(bool));
    
            var caloriesParameter = calories.HasValue ?
                new ObjectParameter("Calories", calories) :
                new ObjectParameter("Calories", typeof(double));
    
            var itemIDParameter = itemID.HasValue ?
                new ObjectParameter("ItemID", itemID) :
                new ObjectParameter("ItemID", typeof(int));
    
            var isApplyDiscountParameter = isApplyDiscount.HasValue ?
                new ObjectParameter("IsApplyDiscount", isApplyDiscount) :
                new ObjectParameter("IsApplyDiscount", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("sp_insertItem_Admin", categoryIDParameter, unitIDParameter, nameParameter, arabicNameParameter, descriptionParameter, imageParameter, barcodeParameter, sKUParameter, displayOrderParameter, priceParameter, costParameter, itemTypeParameter, lastUpdatedByParameter, lastUpdatedDateParameter, statusIDParameter, isFeaturedParameter, caloriesParameter, itemIDParameter, isApplyDiscountParameter);
        }
    
        public virtual int sp_insertItemAddons_Admin(string addons, Nullable<int> itemID)
        {
            var addonsParameter = addons != null ?
                new ObjectParameter("Addons", addons) :
                new ObjectParameter("Addons", typeof(string));
    
            var itemIDParameter = itemID.HasValue ?
                new ObjectParameter("ItemID", itemID) :
                new ObjectParameter("ItemID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insertItemAddons_Admin", addonsParameter, itemIDParameter);
        }
    
        public virtual int sp_insertItemModifiers_Admin(string modifiers, Nullable<int> itemID)
        {
            var modifiersParameter = modifiers != null ?
                new ObjectParameter("Modifiers", modifiers) :
                new ObjectParameter("Modifiers", typeof(string));
    
            var itemIDParameter = itemID.HasValue ?
                new ObjectParameter("ItemID", itemID) :
                new ObjectParameter("ItemID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insertItemModifiers_Admin", modifiersParameter, itemIDParameter);
        }
    
        public virtual int sp_insertItemSettings_Admin(Nullable<int> brandID, string items)
        {
            var brandIDParameter = brandID.HasValue ?
                new ObjectParameter("BrandID", brandID) :
                new ObjectParameter("BrandID", typeof(int));
    
            var itemsParameter = items != null ?
                new ObjectParameter("Items", items) :
                new ObjectParameter("Items", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insertItemSettings_Admin", brandIDParameter, itemsParameter);
        }
    
        public virtual int sp_insertLocation_Admin(string name, string description, string address, string contactNo, string email, Nullable<int> licenseID, Nullable<bool> deliveryServices, Nullable<double> deliveryCharges, string deliveryTime, Nullable<double> minOrderAmount, string longitude, string latitude, string lastUpdatedBy, Nullable<System.DateTime> lastUpdatedDate, Nullable<int> statusID, string imageURL, Nullable<int> brandID, string opentime, string closetime, Nullable<int> locationID, string currency, string passcode, Nullable<double> discounts, Nullable<double> tax, Nullable<int> isPickupAllowed, Nullable<int> isDeliveryAllowed, Nullable<int> isAdvanceOrder, Nullable<int> isDineInAllowed)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var contactNoParameter = contactNo != null ?
                new ObjectParameter("ContactNo", contactNo) :
                new ObjectParameter("ContactNo", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var licenseIDParameter = licenseID.HasValue ?
                new ObjectParameter("LicenseID", licenseID) :
                new ObjectParameter("LicenseID", typeof(int));
    
            var deliveryServicesParameter = deliveryServices.HasValue ?
                new ObjectParameter("DeliveryServices", deliveryServices) :
                new ObjectParameter("DeliveryServices", typeof(bool));
    
            var deliveryChargesParameter = deliveryCharges.HasValue ?
                new ObjectParameter("DeliveryCharges", deliveryCharges) :
                new ObjectParameter("DeliveryCharges", typeof(double));
    
            var deliveryTimeParameter = deliveryTime != null ?
                new ObjectParameter("DeliveryTime", deliveryTime) :
                new ObjectParameter("DeliveryTime", typeof(string));
    
            var minOrderAmountParameter = minOrderAmount.HasValue ?
                new ObjectParameter("MinOrderAmount", minOrderAmount) :
                new ObjectParameter("MinOrderAmount", typeof(double));
    
            var longitudeParameter = longitude != null ?
                new ObjectParameter("Longitude", longitude) :
                new ObjectParameter("Longitude", typeof(string));
    
            var latitudeParameter = latitude != null ?
                new ObjectParameter("Latitude", latitude) :
                new ObjectParameter("Latitude", typeof(string));
    
            var lastUpdatedByParameter = lastUpdatedBy != null ?
                new ObjectParameter("LastUpdatedBy", lastUpdatedBy) :
                new ObjectParameter("LastUpdatedBy", typeof(string));
    
            var lastUpdatedDateParameter = lastUpdatedDate.HasValue ?
                new ObjectParameter("LastUpdatedDate", lastUpdatedDate) :
                new ObjectParameter("LastUpdatedDate", typeof(System.DateTime));
    
            var statusIDParameter = statusID.HasValue ?
                new ObjectParameter("StatusID", statusID) :
                new ObjectParameter("StatusID", typeof(int));
    
            var imageURLParameter = imageURL != null ?
                new ObjectParameter("ImageURL", imageURL) :
                new ObjectParameter("ImageURL", typeof(string));
    
            var brandIDParameter = brandID.HasValue ?
                new ObjectParameter("BrandID", brandID) :
                new ObjectParameter("BrandID", typeof(int));
    
            var opentimeParameter = opentime != null ?
                new ObjectParameter("Opentime", opentime) :
                new ObjectParameter("Opentime", typeof(string));
    
            var closetimeParameter = closetime != null ?
                new ObjectParameter("Closetime", closetime) :
                new ObjectParameter("Closetime", typeof(string));
    
            var locationIDParameter = locationID.HasValue ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(int));
    
            var currencyParameter = currency != null ?
                new ObjectParameter("Currency", currency) :
                new ObjectParameter("Currency", typeof(string));
    
            var passcodeParameter = passcode != null ?
                new ObjectParameter("Passcode", passcode) :
                new ObjectParameter("Passcode", typeof(string));
    
            var discountsParameter = discounts.HasValue ?
                new ObjectParameter("Discounts", discounts) :
                new ObjectParameter("Discounts", typeof(double));
    
            var taxParameter = tax.HasValue ?
                new ObjectParameter("Tax", tax) :
                new ObjectParameter("Tax", typeof(double));
    
            var isPickupAllowedParameter = isPickupAllowed.HasValue ?
                new ObjectParameter("IsPickupAllowed", isPickupAllowed) :
                new ObjectParameter("IsPickupAllowed", typeof(int));
    
            var isDeliveryAllowedParameter = isDeliveryAllowed.HasValue ?
                new ObjectParameter("IsDeliveryAllowed", isDeliveryAllowed) :
                new ObjectParameter("IsDeliveryAllowed", typeof(int));
    
            var isAdvanceOrderParameter = isAdvanceOrder.HasValue ?
                new ObjectParameter("IsAdvanceOrder", isAdvanceOrder) :
                new ObjectParameter("IsAdvanceOrder", typeof(int));
    
            var isDineInAllowedParameter = isDineInAllowed.HasValue ?
                new ObjectParameter("IsDineInAllowed", isDineInAllowed) :
                new ObjectParameter("IsDineInAllowed", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insertLocation_Admin", nameParameter, descriptionParameter, addressParameter, contactNoParameter, emailParameter, licenseIDParameter, deliveryServicesParameter, deliveryChargesParameter, deliveryTimeParameter, minOrderAmountParameter, longitudeParameter, latitudeParameter, lastUpdatedByParameter, lastUpdatedDateParameter, statusIDParameter, imageURLParameter, brandIDParameter, opentimeParameter, closetimeParameter, locationIDParameter, currencyParameter, passcodeParameter, discountsParameter, taxParameter, isPickupAllowedParameter, isDeliveryAllowedParameter, isAdvanceOrderParameter, isDineInAllowedParameter);
        }
    
        public virtual int sp_insertModifier_Admin(string name, string arabicName, string description, string image, Nullable<double> price, string lastUpdatedBy, Nullable<System.DateTime> lastUpdatedDate, Nullable<int> statusID, Nullable<int> brandID, Nullable<int> modifierID)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var arabicNameParameter = arabicName != null ?
                new ObjectParameter("ArabicName", arabicName) :
                new ObjectParameter("ArabicName", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(double));
    
            var lastUpdatedByParameter = lastUpdatedBy != null ?
                new ObjectParameter("LastUpdatedBy", lastUpdatedBy) :
                new ObjectParameter("LastUpdatedBy", typeof(string));
    
            var lastUpdatedDateParameter = lastUpdatedDate.HasValue ?
                new ObjectParameter("LastUpdatedDate", lastUpdatedDate) :
                new ObjectParameter("LastUpdatedDate", typeof(System.DateTime));
    
            var statusIDParameter = statusID.HasValue ?
                new ObjectParameter("StatusID", statusID) :
                new ObjectParameter("StatusID", typeof(int));
    
            var brandIDParameter = brandID.HasValue ?
                new ObjectParameter("BrandID", brandID) :
                new ObjectParameter("BrandID", typeof(int));
    
            var modifierIDParameter = modifierID.HasValue ?
                new ObjectParameter("ModifierID", modifierID) :
                new ObjectParameter("ModifierID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insertModifier_Admin", nameParameter, arabicNameParameter, descriptionParameter, imageParameter, priceParameter, lastUpdatedByParameter, lastUpdatedDateParameter, statusIDParameter, brandIDParameter, modifierIDParameter);
        }
    
        public virtual int sp_insertOffers_Admin(string name, string description, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string image, Nullable<int> itemID, Nullable<int> statusID, string lastUpdatedBy, Nullable<System.DateTime> lastUpdatedDate, Nullable<int> brandID, Nullable<int> offerID)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var itemIDParameter = itemID.HasValue ?
                new ObjectParameter("ItemID", itemID) :
                new ObjectParameter("ItemID", typeof(int));
    
            var statusIDParameter = statusID.HasValue ?
                new ObjectParameter("StatusID", statusID) :
                new ObjectParameter("StatusID", typeof(int));
    
            var lastUpdatedByParameter = lastUpdatedBy != null ?
                new ObjectParameter("LastUpdatedBy", lastUpdatedBy) :
                new ObjectParameter("LastUpdatedBy", typeof(string));
    
            var lastUpdatedDateParameter = lastUpdatedDate.HasValue ?
                new ObjectParameter("LastUpdatedDate", lastUpdatedDate) :
                new ObjectParameter("LastUpdatedDate", typeof(System.DateTime));
    
            var brandIDParameter = brandID.HasValue ?
                new ObjectParameter("BrandID", brandID) :
                new ObjectParameter("BrandID", typeof(int));
    
            var offerIDParameter = offerID.HasValue ?
                new ObjectParameter("OfferID", offerID) :
                new ObjectParameter("OfferID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insertOffers_Admin", nameParameter, descriptionParameter, fromDateParameter, toDateParameter, imageParameter, itemIDParameter, statusIDParameter, lastUpdatedByParameter, lastUpdatedDateParameter, brandIDParameter, offerIDParameter);
        }
    
        public virtual ObjectResult<sp_rptSalesCategorywiseAdmin_Result> sp_rptSalesCategorywiseAdmin(Nullable<int> brandid, string locationid, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate)
        {
            var brandidParameter = brandid.HasValue ?
                new ObjectParameter("brandid", brandid) :
                new ObjectParameter("brandid", typeof(int));
    
            var locationidParameter = locationid != null ?
                new ObjectParameter("locationid", locationid) :
                new ObjectParameter("locationid", typeof(string));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_rptSalesCategorywiseAdmin_Result>("sp_rptSalesCategorywiseAdmin", brandidParameter, locationidParameter, fromdateParameter, todateParameter);
        }
    
        public virtual ObjectResult<sp_rptSalesCustomerReport_Result> sp_rptSalesCustomerReport(Nullable<int> brandid, Nullable<int> customerid, string locationid, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate)
        {
            var brandidParameter = brandid.HasValue ?
                new ObjectParameter("brandid", brandid) :
                new ObjectParameter("brandid", typeof(int));
    
            var customeridParameter = customerid.HasValue ?
                new ObjectParameter("customerid", customerid) :
                new ObjectParameter("customerid", typeof(int));
    
            var locationidParameter = locationid != null ?
                new ObjectParameter("locationid", locationid) :
                new ObjectParameter("locationid", typeof(string));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_rptSalesCustomerReport_Result>("sp_rptSalesCustomerReport", brandidParameter, customeridParameter, locationidParameter, fromdateParameter, todateParameter);
        }
    
        public virtual ObjectResult<sp_rptSalesCustomerwiseAdmin_Result> sp_rptSalesCustomerwiseAdmin(Nullable<int> brandid, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate)
        {
            var brandidParameter = brandid.HasValue ?
                new ObjectParameter("brandid", brandid) :
                new ObjectParameter("brandid", typeof(int));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_rptSalesCustomerwiseAdmin_Result>("sp_rptSalesCustomerwiseAdmin", brandidParameter, fromdateParameter, todateParameter);
        }
    
        public virtual ObjectResult<sp_rptSalesDetailsReport_Result> sp_rptSalesDetailsReport(Nullable<int> brandid, string locationid, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, Nullable<int> customerid)
        {
            var brandidParameter = brandid.HasValue ?
                new ObjectParameter("brandid", brandid) :
                new ObjectParameter("brandid", typeof(int));
    
            var locationidParameter = locationid != null ?
                new ObjectParameter("locationid", locationid) :
                new ObjectParameter("locationid", typeof(string));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var customeridParameter = customerid.HasValue ?
                new ObjectParameter("customerid", customerid) :
                new ObjectParameter("customerid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_rptSalesDetailsReport_Result>("sp_rptSalesDetailsReport", brandidParameter, locationidParameter, fromdateParameter, todateParameter, customeridParameter);
        }
    
        public virtual ObjectResult<sp_rptSalesItemwiseAdmin_Result> sp_rptSalesItemwiseAdmin(Nullable<int> brandid, string locationid, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate)
        {
            var brandidParameter = brandid.HasValue ?
                new ObjectParameter("brandid", brandid) :
                new ObjectParameter("brandid", typeof(int));
    
            var locationidParameter = locationid != null ?
                new ObjectParameter("locationid", locationid) :
                new ObjectParameter("locationid", typeof(string));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_rptSalesItemwiseAdmin_Result>("sp_rptSalesItemwiseAdmin", brandidParameter, locationidParameter, fromdateParameter, todateParameter);
        }
    
        public virtual ObjectResult<sp_rptSalesOrders_Result> sp_rptSalesOrders(Nullable<int> brandid, string locationid, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate)
        {
            var brandidParameter = brandid.HasValue ?
                new ObjectParameter("brandid", brandid) :
                new ObjectParameter("brandid", typeof(int));
    
            var locationidParameter = locationid != null ?
                new ObjectParameter("locationid", locationid) :
                new ObjectParameter("locationid", typeof(string));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_rptSalesOrders_Result>("sp_rptSalesOrders", brandidParameter, locationidParameter, fromdateParameter, todateParameter);
        }
    
        public virtual ObjectResult<sp_rptSalesSummaryAdmin_Result> sp_rptSalesSummaryAdmin(Nullable<int> brandid, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate)
        {
            var brandidParameter = brandid.HasValue ?
                new ObjectParameter("brandid", brandid) :
                new ObjectParameter("brandid", typeof(int));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_rptSalesSummaryAdmin_Result>("sp_rptSalesSummaryAdmin", brandidParameter, fromdateParameter, todateParameter);
        }
    
        public virtual ObjectResult<sp_rptSalesUserwiseAdmin_Result> sp_rptSalesUserwiseAdmin(Nullable<int> brandid, string locationid, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate)
        {
            var brandidParameter = brandid.HasValue ?
                new ObjectParameter("brandid", brandid) :
                new ObjectParameter("brandid", typeof(int));
    
            var locationidParameter = locationid != null ?
                new ObjectParameter("locationid", locationid) :
                new ObjectParameter("locationid", typeof(string));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_rptSalesUserwiseAdmin_Result>("sp_rptSalesUserwiseAdmin", brandidParameter, locationidParameter, fromdateParameter, todateParameter);
        }
    
        public virtual ObjectResult<sp_SaleaToday_admin_Result> sp_SaleaToday_admin(Nullable<int> locationID, Nullable<System.DateTime> businessDate)
        {
            var locationIDParameter = locationID.HasValue ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(int));
    
            var businessDateParameter = businessDate.HasValue ?
                new ObjectParameter("BusinessDate", businessDate) :
                new ObjectParameter("BusinessDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SaleaToday_admin_Result>("sp_SaleaToday_admin", locationIDParameter, businessDateParameter);
        }
    
        public virtual ObjectResult<sp_SalesDashboard_admin_Result> sp_SalesDashboard_admin(Nullable<int> locationID, Nullable<System.DateTime> businessDate)
        {
            var locationIDParameter = locationID.HasValue ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(int));
    
            var businessDateParameter = businessDate.HasValue ?
                new ObjectParameter("BusinessDate", businessDate) :
                new ObjectParameter("BusinessDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SalesDashboard_admin_Result>("sp_SalesDashboard_admin", locationIDParameter, businessDateParameter);
        }
    
        public virtual ObjectResult<sp_SalesDashboardRange_admin_Result> sp_SalesDashboardRange_admin(Nullable<int> locationID, Nullable<System.DateTime> fromBusinessDate, Nullable<System.DateTime> toBusinessDate)
        {
            var locationIDParameter = locationID.HasValue ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(int));
    
            var fromBusinessDateParameter = fromBusinessDate.HasValue ?
                new ObjectParameter("FromBusinessDate", fromBusinessDate) :
                new ObjectParameter("FromBusinessDate", typeof(System.DateTime));
    
            var toBusinessDateParameter = toBusinessDate.HasValue ?
                new ObjectParameter("ToBusinessDate", toBusinessDate) :
                new ObjectParameter("ToBusinessDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SalesDashboardRange_admin_Result>("sp_SalesDashboardRange_admin", locationIDParameter, fromBusinessDateParameter, toBusinessDateParameter);
        }
    
        public virtual ObjectResult<sp_SalesMAEN_Result> sp_SalesMAEN(Nullable<int> locationID, Nullable<System.DateTime> businessDate)
        {
            var locationIDParameter = locationID.HasValue ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(int));
    
            var businessDateParameter = businessDate.HasValue ?
                new ObjectParameter("BusinessDate", businessDate) :
                new ObjectParameter("BusinessDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SalesMAEN_Result>("sp_SalesMAEN", locationIDParameter, businessDateParameter);
        }
    
        public virtual int sp_updateAddon_Admin(string name, string arabicName, string description, string image, Nullable<double> price, string lastUpdatedBy, Nullable<System.DateTime> lastUpdatedDate, Nullable<int> statusID, Nullable<int> brandID, Nullable<int> addonID)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var arabicNameParameter = arabicName != null ?
                new ObjectParameter("ArabicName", arabicName) :
                new ObjectParameter("ArabicName", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(double));
    
            var lastUpdatedByParameter = lastUpdatedBy != null ?
                new ObjectParameter("LastUpdatedBy", lastUpdatedBy) :
                new ObjectParameter("LastUpdatedBy", typeof(string));
    
            var lastUpdatedDateParameter = lastUpdatedDate.HasValue ?
                new ObjectParameter("LastUpdatedDate", lastUpdatedDate) :
                new ObjectParameter("LastUpdatedDate", typeof(System.DateTime));
    
            var statusIDParameter = statusID.HasValue ?
                new ObjectParameter("StatusID", statusID) :
                new ObjectParameter("StatusID", typeof(int));
    
            var brandIDParameter = brandID.HasValue ?
                new ObjectParameter("BrandID", brandID) :
                new ObjectParameter("BrandID", typeof(int));
    
            var addonIDParameter = addonID.HasValue ?
                new ObjectParameter("AddonID", addonID) :
                new ObjectParameter("AddonID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_updateAddon_Admin", nameParameter, arabicNameParameter, descriptionParameter, imageParameter, priceParameter, lastUpdatedByParameter, lastUpdatedDateParameter, statusIDParameter, brandIDParameter, addonIDParameter);
        }
    
        public virtual int sp_updateAppInfo_Admin(Nullable<int> appInfoID, string appDescription, string facebook, string twitter, string instagram)
        {
            var appInfoIDParameter = appInfoID.HasValue ?
                new ObjectParameter("AppInfoID", appInfoID) :
                new ObjectParameter("AppInfoID", typeof(int));
    
            var appDescriptionParameter = appDescription != null ?
                new ObjectParameter("AppDescription", appDescription) :
                new ObjectParameter("AppDescription", typeof(string));
    
            var facebookParameter = facebook != null ?
                new ObjectParameter("Facebook", facebook) :
                new ObjectParameter("Facebook", typeof(string));
    
            var twitterParameter = twitter != null ?
                new ObjectParameter("Twitter", twitter) :
                new ObjectParameter("Twitter", typeof(string));
    
            var instagramParameter = instagram != null ?
                new ObjectParameter("Instagram", instagram) :
                new ObjectParameter("Instagram", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_updateAppInfo_Admin", appInfoIDParameter, appDescriptionParameter, facebookParameter, twitterParameter, instagramParameter);
        }
    
        public virtual int sp_updateAppsetting_Admin(string branchName, string branchAddress, string branchTiming, string deliveryNo, Nullable<int> discount, string discountdescription, Nullable<int> statusID, Nullable<int> brandID, Nullable<int> iD, string whatsappNo)
        {
            var branchNameParameter = branchName != null ?
                new ObjectParameter("BranchName", branchName) :
                new ObjectParameter("BranchName", typeof(string));
    
            var branchAddressParameter = branchAddress != null ?
                new ObjectParameter("BranchAddress", branchAddress) :
                new ObjectParameter("BranchAddress", typeof(string));
    
            var branchTimingParameter = branchTiming != null ?
                new ObjectParameter("BranchTiming", branchTiming) :
                new ObjectParameter("BranchTiming", typeof(string));
    
            var deliveryNoParameter = deliveryNo != null ?
                new ObjectParameter("DeliveryNo", deliveryNo) :
                new ObjectParameter("DeliveryNo", typeof(string));
    
            var discountParameter = discount.HasValue ?
                new ObjectParameter("Discount", discount) :
                new ObjectParameter("Discount", typeof(int));
    
            var discountdescriptionParameter = discountdescription != null ?
                new ObjectParameter("Discountdescription", discountdescription) :
                new ObjectParameter("Discountdescription", typeof(string));
    
            var statusIDParameter = statusID.HasValue ?
                new ObjectParameter("StatusID", statusID) :
                new ObjectParameter("StatusID", typeof(int));
    
            var brandIDParameter = brandID.HasValue ?
                new ObjectParameter("BrandID", brandID) :
                new ObjectParameter("BrandID", typeof(int));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var whatsappNoParameter = whatsappNo != null ?
                new ObjectParameter("WhatsappNo", whatsappNo) :
                new ObjectParameter("WhatsappNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_updateAppsetting_Admin", branchNameParameter, branchAddressParameter, branchTimingParameter, deliveryNoParameter, discountParameter, discountdescriptionParameter, statusIDParameter, brandIDParameter, iDParameter, whatsappNoParameter);
        }
    
        public virtual int sp_updateBanner_Admin(string name, string description, string image, Nullable<int> statusID, string lastUpdatedBy, Nullable<System.DateTime> lastUpdatedDate, Nullable<int> brandID, Nullable<int> bannerID)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var statusIDParameter = statusID.HasValue ?
                new ObjectParameter("StatusID", statusID) :
                new ObjectParameter("StatusID", typeof(int));
    
            var lastUpdatedByParameter = lastUpdatedBy != null ?
                new ObjectParameter("LastUpdatedBy", lastUpdatedBy) :
                new ObjectParameter("LastUpdatedBy", typeof(string));
    
            var lastUpdatedDateParameter = lastUpdatedDate.HasValue ?
                new ObjectParameter("LastUpdatedDate", lastUpdatedDate) :
                new ObjectParameter("LastUpdatedDate", typeof(System.DateTime));
    
            var brandIDParameter = brandID.HasValue ?
                new ObjectParameter("BrandID", brandID) :
                new ObjectParameter("BrandID", typeof(int));
    
            var bannerIDParameter = bannerID.HasValue ?
                new ObjectParameter("BannerID", bannerID) :
                new ObjectParameter("BannerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_updateBanner_Admin", nameParameter, descriptionParameter, imageParameter, statusIDParameter, lastUpdatedByParameter, lastUpdatedDateParameter, brandIDParameter, bannerIDParameter);
        }
    
        public virtual int sp_updateBrand_Admin(string username, string name, string image, string email, string password, string companyURl, string address, Nullable<int> statusID, string currency, Nullable<long> businessKey, string lastUpdateBy, Nullable<System.DateTime> lastUpdatedDate, Nullable<int> brandID)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var companyURlParameter = companyURl != null ?
                new ObjectParameter("CompanyURl", companyURl) :
                new ObjectParameter("CompanyURl", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var statusIDParameter = statusID.HasValue ?
                new ObjectParameter("StatusID", statusID) :
                new ObjectParameter("StatusID", typeof(int));
    
            var currencyParameter = currency != null ?
                new ObjectParameter("Currency", currency) :
                new ObjectParameter("Currency", typeof(string));
    
            var businessKeyParameter = businessKey.HasValue ?
                new ObjectParameter("BusinessKey", businessKey) :
                new ObjectParameter("BusinessKey", typeof(long));
    
            var lastUpdateByParameter = lastUpdateBy != null ?
                new ObjectParameter("LastUpdateBy", lastUpdateBy) :
                new ObjectParameter("LastUpdateBy", typeof(string));
    
            var lastUpdatedDateParameter = lastUpdatedDate.HasValue ?
                new ObjectParameter("LastUpdatedDate", lastUpdatedDate) :
                new ObjectParameter("LastUpdatedDate", typeof(System.DateTime));
    
            var brandIDParameter = brandID.HasValue ?
                new ObjectParameter("BrandID", brandID) :
                new ObjectParameter("BrandID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_updateBrand_Admin", usernameParameter, nameParameter, imageParameter, emailParameter, passwordParameter, companyURlParameter, addressParameter, statusIDParameter, currencyParameter, businessKeyParameter, lastUpdateByParameter, lastUpdatedDateParameter, brandIDParameter);
        }
    
        public virtual int sp_updateCategory_Admin(string name, string arabicName, string description, string image, Nullable<int> displayOrder, string lastUpdatedBy, Nullable<System.DateTime> lastUpdatedDate, Nullable<int> statusID, Nullable<int> locationID, Nullable<int> brandID, Nullable<int> categoryID)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var arabicNameParameter = arabicName != null ?
                new ObjectParameter("ArabicName", arabicName) :
                new ObjectParameter("ArabicName", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var displayOrderParameter = displayOrder.HasValue ?
                new ObjectParameter("DisplayOrder", displayOrder) :
                new ObjectParameter("DisplayOrder", typeof(int));
    
            var lastUpdatedByParameter = lastUpdatedBy != null ?
                new ObjectParameter("LastUpdatedBy", lastUpdatedBy) :
                new ObjectParameter("LastUpdatedBy", typeof(string));
    
            var lastUpdatedDateParameter = lastUpdatedDate.HasValue ?
                new ObjectParameter("LastUpdatedDate", lastUpdatedDate) :
                new ObjectParameter("LastUpdatedDate", typeof(System.DateTime));
    
            var statusIDParameter = statusID.HasValue ?
                new ObjectParameter("StatusID", statusID) :
                new ObjectParameter("StatusID", typeof(int));
    
            var locationIDParameter = locationID.HasValue ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(int));
    
            var brandIDParameter = brandID.HasValue ?
                new ObjectParameter("BrandID", brandID) :
                new ObjectParameter("BrandID", typeof(int));
    
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_updateCategory_Admin", nameParameter, arabicNameParameter, descriptionParameter, imageParameter, displayOrderParameter, lastUpdatedByParameter, lastUpdatedDateParameter, statusIDParameter, locationIDParameter, brandIDParameter, categoryIDParameter);
        }
    
        public virtual int sp_updateCustomer_Admin(string fullName, string email, string mobile, string image, Nullable<int> statusID, string lastUpdatedBy, Nullable<System.DateTime> lastUpdatedDate, Nullable<int> locationID, Nullable<int> brandID, string password, Nullable<int> customerID)
        {
            var fullNameParameter = fullName != null ?
                new ObjectParameter("FullName", fullName) :
                new ObjectParameter("FullName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var statusIDParameter = statusID.HasValue ?
                new ObjectParameter("StatusID", statusID) :
                new ObjectParameter("StatusID", typeof(int));
    
            var lastUpdatedByParameter = lastUpdatedBy != null ?
                new ObjectParameter("LastUpdatedBy", lastUpdatedBy) :
                new ObjectParameter("LastUpdatedBy", typeof(string));
    
            var lastUpdatedDateParameter = lastUpdatedDate.HasValue ?
                new ObjectParameter("LastUpdatedDate", lastUpdatedDate) :
                new ObjectParameter("LastUpdatedDate", typeof(System.DateTime));
    
            var locationIDParameter = locationID.HasValue ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(int));
    
            var brandIDParameter = brandID.HasValue ?
                new ObjectParameter("BrandID", brandID) :
                new ObjectParameter("BrandID", typeof(int));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_updateCustomer_Admin", fullNameParameter, emailParameter, mobileParameter, imageParameter, statusIDParameter, lastUpdatedByParameter, lastUpdatedDateParameter, locationIDParameter, brandIDParameter, passwordParameter, customerIDParameter);
        }
    
        public virtual int sp_updateDelivery_Admin(Nullable<int> deliveryAreaID, string name, string amount, Nullable<int> statusID)
        {
            var deliveryAreaIDParameter = deliveryAreaID.HasValue ?
                new ObjectParameter("DeliveryAreaID", deliveryAreaID) :
                new ObjectParameter("DeliveryAreaID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var amountParameter = amount != null ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(string));
    
            var statusIDParameter = statusID.HasValue ?
                new ObjectParameter("StatusID", statusID) :
                new ObjectParameter("StatusID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_updateDelivery_Admin", deliveryAreaIDParameter, nameParameter, amountParameter, statusIDParameter);
        }
    
        public virtual int sp_updateItem_Admin(Nullable<int> categoryID, Nullable<int> unitID, string name, string arabicName, string description, string image, string barcode, string sKU, Nullable<int> displayOrder, Nullable<double> price, Nullable<double> cost, string itemType, string lastUpdatedBy, Nullable<System.DateTime> lastUpdatedDate, Nullable<int> statusID, Nullable<bool> isFeatured, Nullable<double> calories, Nullable<int> itemID, Nullable<bool> isApplyDiscount)
        {
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(int));
    
            var unitIDParameter = unitID.HasValue ?
                new ObjectParameter("UnitID", unitID) :
                new ObjectParameter("UnitID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var arabicNameParameter = arabicName != null ?
                new ObjectParameter("ArabicName", arabicName) :
                new ObjectParameter("ArabicName", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var barcodeParameter = barcode != null ?
                new ObjectParameter("Barcode", barcode) :
                new ObjectParameter("Barcode", typeof(string));
    
            var sKUParameter = sKU != null ?
                new ObjectParameter("SKU", sKU) :
                new ObjectParameter("SKU", typeof(string));
    
            var displayOrderParameter = displayOrder.HasValue ?
                new ObjectParameter("DisplayOrder", displayOrder) :
                new ObjectParameter("DisplayOrder", typeof(int));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(double));
    
            var costParameter = cost.HasValue ?
                new ObjectParameter("Cost", cost) :
                new ObjectParameter("Cost", typeof(double));
    
            var itemTypeParameter = itemType != null ?
                new ObjectParameter("ItemType", itemType) :
                new ObjectParameter("ItemType", typeof(string));
    
            var lastUpdatedByParameter = lastUpdatedBy != null ?
                new ObjectParameter("LastUpdatedBy", lastUpdatedBy) :
                new ObjectParameter("LastUpdatedBy", typeof(string));
    
            var lastUpdatedDateParameter = lastUpdatedDate.HasValue ?
                new ObjectParameter("LastUpdatedDate", lastUpdatedDate) :
                new ObjectParameter("LastUpdatedDate", typeof(System.DateTime));
    
            var statusIDParameter = statusID.HasValue ?
                new ObjectParameter("StatusID", statusID) :
                new ObjectParameter("StatusID", typeof(int));
    
            var isFeaturedParameter = isFeatured.HasValue ?
                new ObjectParameter("IsFeatured", isFeatured) :
                new ObjectParameter("IsFeatured", typeof(bool));
    
            var caloriesParameter = calories.HasValue ?
                new ObjectParameter("Calories", calories) :
                new ObjectParameter("Calories", typeof(double));
    
            var itemIDParameter = itemID.HasValue ?
                new ObjectParameter("ItemID", itemID) :
                new ObjectParameter("ItemID", typeof(int));
    
            var isApplyDiscountParameter = isApplyDiscount.HasValue ?
                new ObjectParameter("IsApplyDiscount", isApplyDiscount) :
                new ObjectParameter("IsApplyDiscount", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_updateItem_Admin", categoryIDParameter, unitIDParameter, nameParameter, arabicNameParameter, descriptionParameter, imageParameter, barcodeParameter, sKUParameter, displayOrderParameter, priceParameter, costParameter, itemTypeParameter, lastUpdatedByParameter, lastUpdatedDateParameter, statusIDParameter, isFeaturedParameter, caloriesParameter, itemIDParameter, isApplyDiscountParameter);
        }
    
        public virtual int sp_updateLocation_Admin(string name, string description, string address, string contactNo, string email, Nullable<int> licenseID, Nullable<bool> deliveryServices, Nullable<double> deliveryCharges, string deliveryTime, Nullable<double> minOrderAmount, string longitude, string latitude, string lastUpdatedBy, Nullable<System.DateTime> lastUpdatedDate, Nullable<int> statusID, string imageURL, Nullable<int> brandID, string opentime, string closetime, Nullable<int> locationID, string passcode, string currency, Nullable<double> discounts, Nullable<double> tax, Nullable<int> isPickupAllowed, Nullable<int> isDeliveryAllowed, Nullable<int> isAdvanceOrder, Nullable<int> isDineInAllowed)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var contactNoParameter = contactNo != null ?
                new ObjectParameter("ContactNo", contactNo) :
                new ObjectParameter("ContactNo", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var licenseIDParameter = licenseID.HasValue ?
                new ObjectParameter("LicenseID", licenseID) :
                new ObjectParameter("LicenseID", typeof(int));
    
            var deliveryServicesParameter = deliveryServices.HasValue ?
                new ObjectParameter("DeliveryServices", deliveryServices) :
                new ObjectParameter("DeliveryServices", typeof(bool));
    
            var deliveryChargesParameter = deliveryCharges.HasValue ?
                new ObjectParameter("DeliveryCharges", deliveryCharges) :
                new ObjectParameter("DeliveryCharges", typeof(double));
    
            var deliveryTimeParameter = deliveryTime != null ?
                new ObjectParameter("DeliveryTime", deliveryTime) :
                new ObjectParameter("DeliveryTime", typeof(string));
    
            var minOrderAmountParameter = minOrderAmount.HasValue ?
                new ObjectParameter("MinOrderAmount", minOrderAmount) :
                new ObjectParameter("MinOrderAmount", typeof(double));
    
            var longitudeParameter = longitude != null ?
                new ObjectParameter("Longitude", longitude) :
                new ObjectParameter("Longitude", typeof(string));
    
            var latitudeParameter = latitude != null ?
                new ObjectParameter("Latitude", latitude) :
                new ObjectParameter("Latitude", typeof(string));
    
            var lastUpdatedByParameter = lastUpdatedBy != null ?
                new ObjectParameter("LastUpdatedBy", lastUpdatedBy) :
                new ObjectParameter("LastUpdatedBy", typeof(string));
    
            var lastUpdatedDateParameter = lastUpdatedDate.HasValue ?
                new ObjectParameter("LastUpdatedDate", lastUpdatedDate) :
                new ObjectParameter("LastUpdatedDate", typeof(System.DateTime));
    
            var statusIDParameter = statusID.HasValue ?
                new ObjectParameter("StatusID", statusID) :
                new ObjectParameter("StatusID", typeof(int));
    
            var imageURLParameter = imageURL != null ?
                new ObjectParameter("ImageURL", imageURL) :
                new ObjectParameter("ImageURL", typeof(string));
    
            var brandIDParameter = brandID.HasValue ?
                new ObjectParameter("BrandID", brandID) :
                new ObjectParameter("BrandID", typeof(int));
    
            var opentimeParameter = opentime != null ?
                new ObjectParameter("Opentime", opentime) :
                new ObjectParameter("Opentime", typeof(string));
    
            var closetimeParameter = closetime != null ?
                new ObjectParameter("Closetime", closetime) :
                new ObjectParameter("Closetime", typeof(string));
    
            var locationIDParameter = locationID.HasValue ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(int));
    
            var passcodeParameter = passcode != null ?
                new ObjectParameter("Passcode", passcode) :
                new ObjectParameter("Passcode", typeof(string));
    
            var currencyParameter = currency != null ?
                new ObjectParameter("Currency", currency) :
                new ObjectParameter("Currency", typeof(string));
    
            var discountsParameter = discounts.HasValue ?
                new ObjectParameter("Discounts", discounts) :
                new ObjectParameter("Discounts", typeof(double));
    
            var taxParameter = tax.HasValue ?
                new ObjectParameter("Tax", tax) :
                new ObjectParameter("Tax", typeof(double));
    
            var isPickupAllowedParameter = isPickupAllowed.HasValue ?
                new ObjectParameter("IsPickupAllowed", isPickupAllowed) :
                new ObjectParameter("IsPickupAllowed", typeof(int));
    
            var isDeliveryAllowedParameter = isDeliveryAllowed.HasValue ?
                new ObjectParameter("IsDeliveryAllowed", isDeliveryAllowed) :
                new ObjectParameter("IsDeliveryAllowed", typeof(int));
    
            var isAdvanceOrderParameter = isAdvanceOrder.HasValue ?
                new ObjectParameter("IsAdvanceOrder", isAdvanceOrder) :
                new ObjectParameter("IsAdvanceOrder", typeof(int));
    
            var isDineInAllowedParameter = isDineInAllowed.HasValue ?
                new ObjectParameter("IsDineInAllowed", isDineInAllowed) :
                new ObjectParameter("IsDineInAllowed", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_updateLocation_Admin", nameParameter, descriptionParameter, addressParameter, contactNoParameter, emailParameter, licenseIDParameter, deliveryServicesParameter, deliveryChargesParameter, deliveryTimeParameter, minOrderAmountParameter, longitudeParameter, latitudeParameter, lastUpdatedByParameter, lastUpdatedDateParameter, statusIDParameter, imageURLParameter, brandIDParameter, opentimeParameter, closetimeParameter, locationIDParameter, passcodeParameter, currencyParameter, discountsParameter, taxParameter, isPickupAllowedParameter, isDeliveryAllowedParameter, isAdvanceOrderParameter, isDineInAllowedParameter);
        }
    
        public virtual int sp_updateModifier_Admin(string name, string arabicName, string description, string image, Nullable<double> price, string lastUpdatedBy, Nullable<System.DateTime> lastUpdatedDate, Nullable<int> statusID, Nullable<int> brandID, Nullable<int> modifierID)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var arabicNameParameter = arabicName != null ?
                new ObjectParameter("ArabicName", arabicName) :
                new ObjectParameter("ArabicName", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(double));
    
            var lastUpdatedByParameter = lastUpdatedBy != null ?
                new ObjectParameter("LastUpdatedBy", lastUpdatedBy) :
                new ObjectParameter("LastUpdatedBy", typeof(string));
    
            var lastUpdatedDateParameter = lastUpdatedDate.HasValue ?
                new ObjectParameter("LastUpdatedDate", lastUpdatedDate) :
                new ObjectParameter("LastUpdatedDate", typeof(System.DateTime));
    
            var statusIDParameter = statusID.HasValue ?
                new ObjectParameter("StatusID", statusID) :
                new ObjectParameter("StatusID", typeof(int));
    
            var brandIDParameter = brandID.HasValue ?
                new ObjectParameter("BrandID", brandID) :
                new ObjectParameter("BrandID", typeof(int));
    
            var modifierIDParameter = modifierID.HasValue ?
                new ObjectParameter("ModifierID", modifierID) :
                new ObjectParameter("ModifierID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_updateModifier_Admin", nameParameter, arabicNameParameter, descriptionParameter, imageParameter, priceParameter, lastUpdatedByParameter, lastUpdatedDateParameter, statusIDParameter, brandIDParameter, modifierIDParameter);
        }
    
        public virtual int sp_updateOffers_Admin(string name, string description, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string image, Nullable<int> itemID, Nullable<int> statusID, string lastUpdatedBy, Nullable<System.DateTime> lastUpdatedDate, Nullable<int> brandID, Nullable<int> offerID)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var itemIDParameter = itemID.HasValue ?
                new ObjectParameter("ItemID", itemID) :
                new ObjectParameter("ItemID", typeof(int));
    
            var statusIDParameter = statusID.HasValue ?
                new ObjectParameter("StatusID", statusID) :
                new ObjectParameter("StatusID", typeof(int));
    
            var lastUpdatedByParameter = lastUpdatedBy != null ?
                new ObjectParameter("LastUpdatedBy", lastUpdatedBy) :
                new ObjectParameter("LastUpdatedBy", typeof(string));
    
            var lastUpdatedDateParameter = lastUpdatedDate.HasValue ?
                new ObjectParameter("LastUpdatedDate", lastUpdatedDate) :
                new ObjectParameter("LastUpdatedDate", typeof(System.DateTime));
    
            var brandIDParameter = brandID.HasValue ?
                new ObjectParameter("BrandID", brandID) :
                new ObjectParameter("BrandID", typeof(int));
    
            var offerIDParameter = offerID.HasValue ?
                new ObjectParameter("OfferID", offerID) :
                new ObjectParameter("OfferID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_updateOffers_Admin", nameParameter, descriptionParameter, fromDateParameter, toDateParameter, imageParameter, itemIDParameter, statusIDParameter, lastUpdatedByParameter, lastUpdatedDateParameter, brandIDParameter, offerIDParameter);
        }
    
        public virtual int sp_updateOrderstatus_Admin(Nullable<System.DateTime> date, Nullable<int> statusid, Nullable<int> orderid)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var statusidParameter = statusid.HasValue ?
                new ObjectParameter("statusid", statusid) :
                new ObjectParameter("statusid", typeof(int));
    
            var orderidParameter = orderid.HasValue ?
                new ObjectParameter("orderid", orderid) :
                new ObjectParameter("orderid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_updateOrderstatus_Admin", dateParameter, statusidParameter, orderidParameter);
        }
    
        public virtual int sp_UpdateTodaySpecial_Admin(string itemSettingTitle, Nullable<bool> isItemSetting)
        {
            var itemSettingTitleParameter = itemSettingTitle != null ?
                new ObjectParameter("ItemSettingTitle", itemSettingTitle) :
                new ObjectParameter("ItemSettingTitle", typeof(string));
    
            var isItemSettingParameter = isItemSetting.HasValue ?
                new ObjectParameter("IsItemSetting", isItemSetting) :
                new ObjectParameter("IsItemSetting", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateTodaySpecial_Admin", itemSettingTitleParameter, isItemSettingParameter);
        }
    }
}
